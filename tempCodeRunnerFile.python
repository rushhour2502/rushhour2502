board = [" " for i in range (10)]

def insertLetter(letter, pos):
    board[pos] = letter

def printboard(board):
    print('   |   |   ')
    print(' ' + board[1] + ' | ' + board[2] + ' | ' + board[3])
    print('   |   |   ')
    print('------------')
    print('   |   |   ')
    print(' ' + board[4] + ' | ' + board[5] + ' | ' + board[6])
    print('   |   |   ')
    print('------------')
    print('   |   |   ')
    print(' ' + board[7] + ' | ' + board[8] + ' | ' + board[9])
    print('   |   |   ')

def spaceIsFree(pos):
    if board[pos] == " ":
        return True
    else:
        print("this space has already been taken")

def isBoardfull(board):
    if board.count(" ") > 1:
        return True
    else:
        return False
    
def IsWinner(b, l):
    return ((b[1] == l and b[2] == l and b[3] == l) or 
    (b[4] == l and b[5] == l and b[6] == l) or
    (b[7] == l and b[8] == l and b[9] == l) or
    (b[1] == l and b[4] == l and b[7] == l) or
    (b[2] == l and b[5] == l and b[8] == l) or
    (b[3] == l and b[6] == l and b[9] == l) or
    (b[1] == l and b[5] == l and b[9] == l) or
    (b[3] == l and b[5] == l and b[7] == l))

def playerMove():
    run = True
    while run:
        move = input("Enter a position to play X between 1 to 9: ")
        try:
            move = int(move)
            if move >0 and move < 10:
                if spaceIsFree(move):
                    run = False
                    insertLetter("X", move)
                else:
                    print("Sorry this space has been taken")
            else:
                print("Enter a number between 1 and 9")
        except:
            print("Enter a valid number")

def computerMove():
    possibleMoves = [x for x, letter in enumerate(board) if x == " " and x != 0 ]
    move = 0

    for let in ["O", "X"]:
        for i in possibleMoves:
            boardcopy = board[:]
            boardcopy[i] = let
            if IsWinner(boardcopy, let):
                move = i
                return move
            
    cornersOpen = []
    for i in possibleMoves:
        if i in [1, 3, 7, 9]:
            cornersOpen.append(i)

    if len(cornersOpen) > 0:
        move = selectRandom(cornersOpen)
        return move
    
    if 5 in possibleMoves:
        move = 5
        return move
    
    edgesOpen = []
    for i in possibleMoves:
        if i in [2, 4, 6, 8]:
            move = selectRandom(edgesOpen)

    if len(edgesOpen) > 0:
        move = selectRandom(edgesOpen)
        return move
    

    

def selectRandom(li):
    import random
    ln = len(li)
    r = random.randrange(0, ln)
    return li[r]
    
def main():

    while not (isBoardfull):
        if not (IsWinner(board, X)):
            playerMove()
            printboard(board)
        else:
            print("You Lose!")

        if not (IsWinner(board, "O")):
            move = computerMove()
            if move == 0:
                return " "
            else:
                insertLetter("O", move)
                print('computer placed an O on position' , move , ':')
                printBoard(board)

        else:
            print("You win!")
            
    # if isBoardfull(board):
    #     print("Tie game")


while True:
    x = input("DO you want to continue playing? y/n: ")
    x = x.lower()
    if x == "y":
        board = [" " for i in range(10)]
        print("""Welcome to the tic-tac-toe
                *****************************
                *****************************
                """)
        main()
    else:
        break


